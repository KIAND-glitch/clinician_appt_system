openapi: 3.0.0
info:
  title: Clinic Appointments API
  version: 1.0.0
  description: >
    REST API for a simplified clinic appointment system.
    - Times must be ISO-8601. Stored/returned in UTC.
    - Touching endpoints allowed (end == other.start is OK).
    - Past appointments creation is rejected.
servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    RoleHeader:
      type: apiKey
      name: X-Role
      in: header
  schemas:
    Role:
      type: string
      enum: [patient, clinician, admin]
      example: patient

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: invalid input
        details:
          description: Optional validation details (e.g., Zod error)
          nullable: true
      required: [message]

    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        clinicianId:
          type: string
        patientId:
          type: string
        start:
          type: string
          format: date-time
          description: ISO date-time (UTC)
        end:
          type: string
          format: date-time
          description: ISO date-time (UTC)
        createdAt:
          type: string
          format: date-time
          description: ISO date-time (UTC)
      required: [id, clinicianId, patientId, start, end, createdAt]

    AppointmentCreate:
      type: object
      properties:
        clinicianId:
          type: string
        patientId:
          type: string
        start:
          type: string
          format: date-time
          description: Must be in the future; strictly before end
        end:
          type: string
          format: date-time
          description: Must be after start; touching allowed relative to other appts
      required: [clinicianId, patientId, start, end]

paths:
  /appointments:
    get:
      tags: [Appointments]
      operationId: adminListAppointments
      summary: Admin — list upcoming appointments
      description: Requires **admin** role. Returns upcoming appointments; optional date range filtering.
      security:
        - RoleHeader: []
      parameters:
        - in: header
          name: X-Role
          required: true
          description: Must be **admin** for this endpoint.
          schema:
            $ref: '#/components/schemas/Role'
        - in: query
          name: from
          required: false
          description: Lower bound (inclusive). Defaults to **now** if omitted.
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          required: false
          description: Upper bound (exclusive/inclusive per implementation). Must be after `from` when both provided.
          schema:
            type: string
            format: date-time
        - in: query
          name: limit
          required: false
          description: Optional page size.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - in: query
          name: offset
          required: false
          description: Optional offset for pagination.
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '400':
          description: Invalid input (bad from/to or invalid role value)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (role missing or not admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Bash
          label: curl
          source: |
            curl -s -X GET "http://localhost:3000/appointments?from=2025-10-21T00:00:00.000Z&to=2025-10-21T23:59:59.999Z" \
              -H "X-Role: admin" | jq

    post:
      tags: [Appointments]
      operationId: createAppointment
      summary: Patient/Admin — create an appointment
      description: "Allowed roles: **patient**, **admin**. Prevents overlapping appointments for the same clinician."
      security:
        - RoleHeader: []
      parameters:
        - in: header
          name: X-Role
          required: true
          description: "Role simulation header. Allowed: **patient**, **admin**."
          schema:
            $ref: '#/components/schemas/Role'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreate'
            examples:
              createExample:
                summary: Create 30-minute appointment
                value:
                  clinicianId: c1
                  patientId: p1
                  start: 2025-10-21T03:00:00.000Z
                  end: 2025-10-21T03:30:00.000Z
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Invalid input (missing fields, invalid ISO, start>=end, or appointment in the past)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (role missing or not in [patient, admin])
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict — requested slot overlaps an existing appointment for the same clinician
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Bash
          label: curl
          source: |
            curl -s -X POST http://localhost:3000/appointments \
              -H "Content-Type: application/json" \
              -H "X-Role: patient" \
              -d '{
                "clinicianId":"c1",
                "patientId":"p1",
                "start":"2025-10-21T03:00:00.000Z",
                "end":"2025-10-21T03:30:00.000Z"
              }' | jq

  /clinicians/{id}/appointments:
    get:
      tags: [Clinicians]
      operationId: clinicianListAppointments
      summary: Clinician/Admin — list clinician’s upcoming appointments
      description: "Allowed roles: **clinician**, **admin**. Defaults to start ≥ now if `from` is omitted."
      security:
        - RoleHeader: []
      parameters:
        - in: header
          name: X-Role
          required: true
          description: "Role simulation header. Allowed: **clinician**, **admin**."
          schema:
            $ref: '#/components/schemas/Role'
        - in: path
          name: id
          required: true
          description: Clinician ID
          schema:
            type: string
        - in: query
          name: from
          required: false
          description: Lower bound (inclusive). Defaults to **now** if omitted.
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          required: false
          description: Upper bound (exclusive/inclusive per implementation). Must be after `from` when both provided.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK (appointments for the clinician; empty array if none)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '400':
          description: Invalid input (bad from/to or invalid role value)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (role missing or not in [clinician, admin])
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found (clinician does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Bash
          label: curl
          source: |
            curl -s -X GET "http://localhost:3000/clinicians/c1/appointments?from=2025-10-21T00:00:00.000Z&to=2025-10-21T23:59:59.999Z" \
              -H "X-Role: clinician" | jq
